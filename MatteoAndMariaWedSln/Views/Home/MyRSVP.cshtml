@model MatteoAndMariaWedSln.Models.RSVPViewModel

@{
    ViewBag.Title = "RSVP";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("MyRSVP", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <p>
            <h2>Modifica il tuo RSVP</h2>
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.IdRsvp)
        @Html.HiddenFor(m => m.GUID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItemsGuestNumbers = new List<SelectListItem>();

                    for (int i = 1; i <= 10; i++)
                    {
                        listItemsGuestNumbers.Add(new SelectListItem
                        {
                            Text = i.ToString(),
                            Value = i.ToString()
                        });
                    }
                }

                @Html.DropDownListFor(model => model.Number, listItemsGuestNumbers, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Esito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @{
                    List<SelectListItem> listItemsRSVP = new List<SelectListItem>();
                    listItemsRSVP.Add(new SelectListItem
                    {
                        Text = "Certo!",
                        Value = WeddingServices.Utilities.Enums.RSVPEnum.PRESENTE.ToString()
                    });
                    listItemsRSVP.Add(new SelectListItem
                    {
                        Text = "Purtroppo non ci sarò!",
                        Value = WeddingServices.Utilities.Enums.RSVPEnum.ASSENTE.ToString()
                    });
                }

                @Html.DropDownListFor(model => model.Esito, listItemsRSVP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Esito, "", new { @class = "text-danger" })
            </div>
        </div>
        <p>
            Il menù sarà a base di pesce!
            <br />
            Vi chiediamo di segnalarci preferenze o eventuali intolleranze!
        </p>
        <div class="form-group">
            @Html.LabelFor(model => model.SpecialMenu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialMenu, new { htmlAttributes = new { @class = "checkbox-inline", @id = "chkSpecialMenu" } })
                @Html.ValidationMessageFor(model => model.SpecialMenu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="divNotes" style="display:none;">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", @id = "txtNotes", @rows = 10 } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Modifica" class="btn btn-success" />
            </div>
        </div>


    </div>
                    }
<script type="text/javascript">
    $("#chkSpecialMenu").change(function () {
        if (this.checked) {
            $("#divNotes").show();
        }
        else {
            $("#divNotes").hide();
        }
    })
</script>s