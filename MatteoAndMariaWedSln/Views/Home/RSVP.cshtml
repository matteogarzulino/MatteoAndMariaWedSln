@model MatteoAndMariaWedSln.Models.RSVPViewModel

@*@{
        ViewBag.Title = "RSVP";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@

<div class="container-fluid">
    <div class="row sectionContent">
        <h2>Ci sarai? Chiamaci!</h2>
        <div class="col-md-3"></div>
        <div id="rsvpMatteo" class="rsvpProfileImg col-md-4">
            <img src="~/Content/Images/MatteoProfile_2_small.jpg" alt="Matteo" class="profileImg">
            <div class="profileContact">
                <ul>
                    <li>matteo@mymail.com</li>
                    <li>(+39)3**.37*****</li>
                    <li>Via LoremIpsum X, 34131 Trieste (TS)</li>
                </ul>
            </div>
        </div>
        <div id="rsvpMaria" class="rsvpProfileImg col-md-4">
            <img class="profileImg" src="~/Content/Images/MariaProfile_3_small.jpg" />
            <div class="profileContact">
                <ul>
                    <li>maria@mymail.com</li>
                    <li>(+39)3**.72*****</li>
                    <li>Via LoremIpsum X, 34131 Trieste (TS)</li>
                </ul>
            </div>
        </div>
    </div>

    @using (Html.BeginForm("RSVP", "RSVP", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal sectionContent rsvpForm">
            <h2>RSVP</h2>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.IdRsvp)
            @Html.HiddenFor(m => m.GUID)

            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                    @{
                        List<SelectListItem> listItemsGuestNumbers = new List<SelectListItem>();

                        for (int i = 1; i <= 10; i++)
                        {
                            listItemsGuestNumbers.Add(new SelectListItem
                            {
                                Text = i.ToString(),
                                Value = i.ToString()
                            });
                        }
                    }

                    @Html.DropDownListFor(model => model.Number, listItemsGuestNumbers, new { @class = "form-control col-md-8" })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Esito, htmlAttributes: new { @class = "control-label col-md-2" })
                    @{
                        List<SelectListItem> listItemsRSVP = new List<SelectListItem>();
                        listItemsRSVP.Add(new SelectListItem
                        {
                            Text = "Certo!",
                            Value = WeddingServices.Utilities.Enums.RSVPEnum.PRESENTE.ToString()
                        });
                        listItemsRSVP.Add(new SelectListItem
                        {
                            Text = "Purtroppo non ci sarò!",
                            Value = WeddingServices.Utilities.Enums.RSVPEnum.ASSENTE.ToString()
                        });
                    }

                    @Html.DropDownListFor(model => model.Esito, listItemsRSVP, new { @class = "form-control", @id = "cmbEsito" })
                    @Html.ValidationMessageFor(model => model.Esito, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="divConsensoPrivacy">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.ConsensoPrivacy, new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ConsensoPrivacy, new { @class = "checkbox-inline", @id = "chkConsensoPrivacy" })
                    @*@Html.ValidationMessageFor(model => model.ConsensoPrivacy, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    <p>
                        Il menù sarà a base di pesce: indica preferenze o eventuali intolleranze!
                    </p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.SpecialMenu, new { @class = "control-label col-md-2 " })
                    @Html.EditorFor(model => model.SpecialMenu, new { @class = "checkbox-inline", @id = "chkSpecialMenu" })
                    @Html.ValidationMessageFor(model => model.SpecialMenu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="divNotes" style="display:none;">
                <div class="col-md-2">
                </div>
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Notes, new { @class = "form-control", @id = "txtNotes", @rows = 10 })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-4">
                </div>
                <div class="col-md-4">
                    <div class="g-recaptcha" data-sitekey="6LdjiCEUAAAAAESD22q4RXkacyeBEO5DsQb-bM0K">
                    </div>
                </div>
            </div>
            <div class="form-group submitDiv">
                <div class="col-md-5">
                </div>
                <div class="col-md-2">
                    <input type="submit" value="RSVP" class="btn btn-success btn-lg" />
                </div>
            </div>
        </div>

                        }
</div>
@section Scripts
{
    <script src="@Url.Content("~/Scripts/RSVP.js")"></script>
}

<script type="text/javascript">

    $(document).ready(function () {
        $("#chkConsensoPrivacy").prop('checked', true);
    })
</script>
